{"version":3,"sources":["Footer.js","GraphLayout.js","App.js","useData.js","index.js"],"names":["Footer","url","mail","style","width","className","color","paddingLeft","marginBottom","fontSize","href","target","Nav","Item","Link","clamp","value","min","max","enterLink","selection","attr","d","source","index","enterNode","scale","simulation","clipPositions","append","degree","schemeCategory10","k","call","drag","on","dragStart","dragOn","dragEnd","handleTooltipMouseEnter","handleTooltipMouseOut","getSvgRect","select","node","getBoundingClientRect","top","left","x","y","text","name","selectAll","classed","event","active","alphaTarget","restart","fx","fy","updateLinks","updateNodes","tooltip","data","filter","updateGraph","GraphLayout","nodes","links","height","ref","useRef","useMemo","forceSimulation","force","forceLink","forceManyBody","strength","forceCollide","forceCenter","useEffect","current","console","log","svg","degreeExtent","extent","map","scaleDegreeRadius","scaleLinear","domain","range","radius","join","enter","alpha","App","dataSource","values","flat","counts","Object","fromEntries","rollup","length","o","forEach","i","useState","setNodes","Container","Button","onClick","concat","Math","random","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90a583e1.chunk.js","sourcesContent":["import React from 'react';\nimport { Nav } from 'react-bootstrap';\n\nexport const Footer = ({ url }) => {\n  const mail = 'renato.hermoza@pucp.edu.pe';\n  const social = 'renato145';\n\n  return (\n    <footer style={{ width: '100%' }} className=\"mt-5\">\n      <p style={{ color: '#6c757d', paddingLeft: '1rem', marginBottom: '0rem', fontSize: '0.9rem' }}>\n        Made by: Renato Hermoza, check the{' '}\n        <a href={`https://github.com/renato145/${url}`} target=\"_black\">\n          source code\n        </a>\n        .\n      </p>\n      <hr className=\"mt-2\" />\n      <Nav className=\"justify-content-center\">\n        <Nav.Item>\n          <Nav.Link href={`mailto:${mail}`}>{mail}</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link href={`https://twitter.com/${social}`} target=\"_black\">\n            Twitter\n          </Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link href={`https://github.com/${social}`} target=\"_black\">\n            GitHub\n          </Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link href={`https://${social}.github.io`} target=\"_black\">\n            Blog\n          </Nav.Link>\n        </Nav.Item>\n      </Nav>\n    </footer>\n  );\n};\n","import React, { useRef, useEffect, useMemo } from 'react';\nimport {\n  forceSimulation,\n  forceLink,\n  forceManyBody,\n  forceCenter,\n  select,\n  drag,\n  event,\n  scaleLinear,\n  extent,\n  forceCollide,\n  selectAll,\n  schemeCategory10\n} from 'd3';\nimport './GraphLayout.css';\n\nexport const clamp = (value, min, max) =>\n  value >= max ? max : value <= min ? min : value;\n\nconst enterLink = (selection) => {\n  selection.attr(\n    'class',\n    (d) => `link node-${d.source.index} node-${d.target.index}`\n  );\n};\n\nconst enterNode = (selection, scale, simulation, clipPositions) => {\n  selection.append('circle')\n    .attr('r', (d) => scale(d.degree))\n    .attr('fill', (d) => schemeCategory10[d.k]);\n\n  selection\n    .attr('class', 'node')\n    .call(\n      drag()\n        .on('start', (d) => dragStart(d, simulation))\n        .on('drag', (d) => dragOn(d, clipPositions))\n        .on('end', (d) => dragEnd(d, simulation))\n    )\n    .on('mouseenter', handleTooltipMouseEnter)\n    .on('mouseout', handleTooltipMouseOut);\n};\n\nconst getSvgRect = () =>\n  select('.svg-container svg').node().getBoundingClientRect();\n\nfunction handleTooltipMouseEnter(d) {\n  const { top, left } = getSvgRect();\n\n  select('.node-tooltip')\n    .attr('index', d.index)\n    .style('left', `${d.x + left}px`)\n    .style('top', `${d.y + top}px`)\n    .style('opacity', 1)\n    .select('text')\n    .text(d.name);\n\n  selectAll(`.node-${d.index}`).classed('active', true);\n}\n\nfunction handleTooltipMouseOut(d) {\n  select('.node-tooltip').style('opacity', 0);\n  selectAll(`.node-${d.index}`).classed('active', false);\n}\n\nconst dragStart = (d, simulation) => {\n  if (!event.active) simulation.alphaTarget(0.3).restart();\n  d.fx = d.x;\n  d.fy = d.y;\n};\n\nconst dragOn = (d, clipPositions) => {\n  const [x, y] = clipPositions(event.x, event.y);\n  d.fx = x;\n  d.fy = y;\n};\n\nconst dragEnd = (d, simulation) => {\n  if (!event.active) simulation.alphaTarget(0);\n  d.fx = null;\n  d.fy = null;\n};\n\nconst updateLinks = (selection) => {\n  selection\n    .attr('x1', (d) => d.source.x)\n    .attr('y1', (d) => d.source.y)\n    .attr('x2', (d) => d.target.x)\n    .attr('y2', (d) => d.target.y);\n};\n\nconst updateNodes = (selection) => {\n  selection.attr('transform', (d) => `translate(${d.x}, ${d.y})`);\n  const tooltip = select('.node-tooltip');\n  if (tooltip.node()) {\n    const index = +tooltip.attr('index');\n    const { top, left } = getSvgRect();\n    const { x, y } = selection.data().filter((d) => d.index === index)[0];\n    tooltip.style('left', `${x + left}px`).style('top', `${y + top}px`);\n  }\n};\n\nconst updateGraph = (selection) => {\n  selection.selectAll('.link').call(updateLinks);\n  selection.selectAll('.node').call(updateNodes);\n};\n\nexport const GraphLayout = ({ nodes, links, width, height }) => {\n  const ref = useRef();\n\n  const simulation = useMemo(() => {\n    return forceSimulation()\n      .force('links', forceLink())\n      .force('charge', forceManyBody().strength(-35))\n      .force('collide', forceCollide())\n      .force('center', forceCenter());\n  }, []);\n\n  useEffect(() => {\n    select('.svg-container')\n      .append('div')\n      .attr('class', 'node-tooltip')\n      .style('opacity', 0)\n      .append('text');\n  }, []);\n\n  useEffect(() => {\n    simulation\n      .force('center')\n      .x(width / 2)\n      .y(height / 2);\n    simulation.on('tick', () => select(ref.current).call(updateGraph));\n    console.log('update center');\n  }, [width, height, simulation]);\n\n  useEffect(() => {\n    const svg = select(ref.current);\n    const degreeExtent = extent(nodes.map((d) => d.degree));\n    const scaleDegreeRadius = scaleLinear().domain(degreeExtent).range([5, 20]);\n\n    simulation.nodes(nodes);\n    simulation\n      .force('links')\n      .links(links);\n    simulation.force('collide').radius((d) => scaleDegreeRadius(d.degree));\n\n    // Links\n    svg\n      .selectAll('.link')\n      .data(links, (d) => d.index)\n      .join((enter) => enter.append('line').call(enterLink))\n      .call(updateLinks);\n\n    // Nodes\n    const clipPositions = (x, y) => [\n      clamp(x, 0, +svg.attr('width')),\n      clamp(y, 0, +svg.attr('height')),\n    ];\n\n    svg\n      .selectAll('.node')\n      .data(nodes, (d) => d.index)\n      .join((enter) =>\n        enter\n          .append('g')\n          .call(enterNode, scaleDegreeRadius, simulation, clipPositions)\n      )\n      .call(updateNodes);\n\n    simulation.alpha(0.5).restart();\n    console.log('update data');\n  }, [simulation, nodes, links]);\n\n  return (\n    <div className=\"svg-container\">\n      <svg ref={ref} width={width} height={height} />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Container, Button } from 'react-bootstrap';\nimport {} from 'd3';\nimport { Footer } from './Footer';\nimport { GraphLayout } from './GraphLayout';\nimport { useData } from './useData';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nconst width = 600,\n  height = 500;\n\nfunction App() {\n  const data = useData();\n  const [nodes, setNodes] = useState(data.nodes);\n  const [links, setLinks] = useState(data.links);\n\n  const addData = () => {\n    setNodes((d) =>\n      d.concat({\n        name: 'added',\n        x: width/2,\n        y: height/2,\n        degree: Math.random()*20\n      })\n    );\n  };\n\n  return (\n    <Container className=\"app-container\">\n      <header>\n        <h1 className=\"mt-4 mb-4\">GCN JS</h1>\n      </header>\n\n      <main>\n        <GraphLayout\n          nodes={nodes}\n          links={links}\n          width={width}\n          height={height}\n        />\n        <p>\n          <Button onClick={addData}>Add node</Button>\n        </p>\n      </main>\n\n      <Footer url=\"gcn-js\" />\n    </Container>\n  );\n}\n\nexport default App;\n","import dataSource from './data.json';\nimport { useMemo } from 'react';\nimport { rollup } from 'd3-array';\n\nexport const useData = () => {\n  const data = useMemo(() => {\n    const {links , nodes} = dataSource;\n    const values = links.map(d => [d.source, d.target]).flat();\n    const counts = Object.fromEntries(rollup(values, d => d.length, o => o));\n    nodes.forEach((d,i) => d['degree'] = counts[i]);\n    return {links, nodes};\n  }, []);\n\n  return data;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}